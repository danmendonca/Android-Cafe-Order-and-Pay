/**
 * Acme Cafe App
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;


import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class Product  {
  
  @SerializedName("id")
  private Integer id = null;
  @SerializedName("active")
  private Boolean active = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("unitprice")
  private Double unitprice = null;
  @SerializedName("createdat")
  private String createdat = null;
  @SerializedName("updatedat")
  private String updatedat = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getActive() {
    return active;
  }
  public void setActive(Boolean active) {
    this.active = active;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Unit price of product
   **/
  @ApiModelProperty(value = "Unit price of product")
  public Double getUnitprice() {
    return unitprice;
  }
  public void setUnitprice(Double unitprice) {
    this.unitprice = unitprice;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCreatedat() {
    return createdat;
  }
  public void setCreatedat(String createdat) {
    this.createdat = createdat;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getUpdatedat() {
    return updatedat;
  }
  public void setUpdatedat(String updatedat) {
    this.updatedat = updatedat;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Product product = (Product) o;
    return (id == null ? product.id == null : id.equals(product.id)) &&
        (active == null ? product.active == null : active.equals(product.active)) &&
        (name == null ? product.name == null : name.equals(product.name)) &&
        (unitprice == null ? product.unitprice == null : unitprice.equals(product.unitprice)) &&
        (createdat == null ? product.createdat == null : createdat.equals(product.createdat)) &&
        (updatedat == null ? product.updatedat == null : updatedat.equals(product.updatedat));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (id == null ? 0: id.hashCode());
    result = 31 * result + (active == null ? 0: active.hashCode());
    result = 31 * result + (name == null ? 0: name.hashCode());
    result = 31 * result + (unitprice == null ? 0: unitprice.hashCode());
    result = 31 * result + (createdat == null ? 0: createdat.hashCode());
    result = 31 * result + (updatedat == null ? 0: updatedat.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Product {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  active: ").append(active).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  unitprice: ").append(unitprice).append("\n");
    sb.append("  createdat: ").append(createdat).append("\n");
    sb.append("  updatedat: ").append(updatedat).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
